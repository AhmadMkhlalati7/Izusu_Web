datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 model Account {
  userId               String
  type                 String
  provider             String
  providerAccountId    String
  refresh_token        String?
  access_token         String?
  expires_at           Int?
  token_type           String?
  scope                String?
  id_token             String?
  session_state        String?

  @@id([provider, providerAccountId])
  @@map("account")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Authenticator {
  credentialID           String
  userId                 String
  providerAccountId      String
  credentialPublicKey    String
  counter                Int
  credentialDeviceType   String
  credentialBackedUp     Boolean
  transports             String?

  @@id([userId, credentialID])
  @@unique([credentialID])
  @@map("authenticator")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  sessionToken    String  @id
  userId          String
  expires         DateTime

  @@map("session")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String  @id
  email           String? @unique
  password        String?
  name            String?
  emailVerified   DateTime?
  image           String?

  accounts        Account[]
  authenticators  Authenticator[]
  sessions        Session[]

  @@map("user")
}

model VerificationToken {
  identifier  String
  token       String
  expires     DateTime

  @@id([identifier, token])
  @@map("verificationToken")
}
